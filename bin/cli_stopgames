#!/usr/bin/env python3

import sys, os
import argparse
import asyncio

import config
import client

rootdir = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))
sys.path.append(rootdir)

# get commandline arguments
parser = argparse.ArgumentParser(description='CommandLineInterface (CLI) for Umpire')
parser.add_argument('--url', type=str, default=config.REST_URL, help='url of the robotjes REST entrypoint')
parser.add_argument('--umpire', type=str, default="me", help='name or id of the umpire')
args = parser.parse_args()


class Umpire_Client:

    def __init__(self):
        pass

    def registered(self, game_id):
        print(f"game registered: {game_id}")

    def discovered(self, game_id):
        print(f"game discovered: {game_id}")

    def player(self, player_id, player_name):
        print(f"player registered: {player_id}/{player_name}")

    def started(self):
        print(f"game started")

    def stopped(self, success):
        print(f"game stopped: {success}")

    def tick(self, tick):
        # print(f"tick: {tick}")
        pass

    def game_tick(self, game_tick):
        print(f"game tick: {game_tick}")


async def main(loop):
    clnt = Umpire_Client()
    umpire = client.CLIUmpire(loop, args.url, clnt)
    success = await umpire.stopall()

# run our main loop
aloop = asyncio.get_event_loop()
aloop.run_until_complete(main(aloop))
