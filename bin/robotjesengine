#!/usr/bin/env python3
# Engine to be used while developing a Python Robotjes Solution.

import sys
import os
import logging.config
rootdir = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))
sys.path.append(rootdir)

from robotjes.server import StatusKeeper
from robotjes.server import RobotjesEngine
import robotjes.server as server

server.status_keeper = StatusKeeper()
server.robotjes_engine = RobotjesEngine(server.status_keeper)

# initialise the roborest module
import fastapi
server.app = fastapi.FastAPI()

# import the files with REST calls (do not remove!!!)
import robotjes.server.sys_rest
import robotjes.server.bubble_hub_rest
import robotjes.server.game_rest


# do static files support
from fastapi.staticfiles import StaticFiles
server.app.mount("/", StaticFiles(directory=os.path.join(rootdir, "www")), name="www")


if __name__ == "__main__":
    # get commandline arguments
    import argparse
    parser = argparse.ArgumentParser(description='Execute a Robomind Academy Python script.')
    parser.add_argument('--logconf', type=str, default=os.path.join(rootdir, "bin/log.conf"), help='port')
    parser.add_argument('--host', type=str, default='0.0.0.0', help='host')
    parser.add_argument('--port', type=int, default=8765, help='port')
    parser.add_argument('--maze', type=str, default="default", help='name of the maze to use')
    args = parser.parse_args()
    # init logging
    logging.config.fileConfig(args.logconf)
    logger = logging.getLogger(__name__)
    logger.warning("starting logger")
    # start the webserver (note the logging configuration)
    import uvicorn
    uvicorn.run(server.app, host=args.host, port=args.port, log_config=args.logconf)
